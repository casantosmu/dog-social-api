openapi: 3.1.0

info:
  version: 1.0.0
  title: User API
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  description: This is the API docs for the user API.

servers:
  - url: "http://localhost:3000/v1"

tags:
  - name: Users
    description: Operations related to users.

paths:
  "/users":
    post:
      tags:
        - Users
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
                - latitude
                - longitude
                - language
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                latitude:
                  type: number
                longitude:
                  type: number
                language:
                  type: string
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: string
        "400":
          $ref: "#/components/responses/BadRequest"
        "409":
          $ref: "#/components/responses/Conflict"
      security: []

  "/users/{id}":
    get:
      tags:
        - Users
      summary: Retrieve a user by ID
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the user to retrieve
      responses:
        "200":
          description: Successful retrieval
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - username
                  - email
                  - latitude
                  - longitude
                  - language
                properties:
                  id:
                    type: string
                  username:
                    type: string
                  email:
                    type: string
                  latitude:
                    type: number
                  longitude:
                    type: number
                  language:
                    type: string
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
      security: []

    put:
      tags:
        - Users
      summary: Update an existing user
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the user to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                latitude:
                  type: number
                longitude:
                  type: number
                language:
                  type: string
      responses:
        "200":
          description: Successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
      security: []

    delete:
      tags:
        - Users
      summary: Delete an existing user
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the user to be deleted
      responses:
        "200":
          description: Successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
      security: []

components:
  schemas:
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
            message:
              type: string
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
